{"version":3,"sources":["webpack:///./src/utils/url-utils.js","webpack:///./src/components/sidebar/Bio.tsx","webpack:///./src/components/sidebar/Sidebar.tsx","webpack:///./src/constants.ts","webpack:///./src/templates/post-list.tsx","webpack:///./src/components/posts/PostPreview.tsx"],"names":["module","exports","getPostUrl","slug","getPageUrl","index","BioHolder","styled","div","FirstRow","BioMain","Bio","src","negue","style","maxWidth","className","alt","Sidebar","setThemeVars","TechTagsOverview","title","to","DEFAULT_SEO_KEYWORDS","PageNavToolbar","listQuery","PostList","props","posts","data","allMarkdownRemark","edges","site","siteMetadata","labels","pageContext","currentPage","isFirst","isLast","numPages","prevPage","nextPage","postsEl","map","post","node","key","id","leftSidebar","keywords","rel","textDecoration","OuterPostPreview","PostExcerp","TextInfo","PostPreview","tags","frontmatter","toLink","fields","date","excerpt"],"mappings":"0HAQAA,EAAOC,QAAU,CACfC,WATF,SAAqBC,GACnB,MAAM,QAASA,GASfC,WANF,SAAoBC,GAClB,OAAiB,IAAVA,EAAc,QAAd,SAAiCA,K,4ICApCC,EAAYC,IAAOC,IAAV,qEAAGD,CAAH,8IAkBTE,EAAWF,IAAOC,IAAV,oEAAGD,CAAH,+DAQRG,EAAUH,IAAOC,IAAV,mEAAGD,CAAH,uCAIAI,EAAM,WACjB,OACE,kBAACL,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,yBACEE,IAAKC,IACLC,MAAO,CAAEC,SAAU,SACnBC,UAAU,cACVC,IAAI,S,oCCdHC,GApBKX,IAAOC,IAAV,uEAAGD,CAAH,gMAcgB,kBAAMY,YAAa,QAAS,YAMpC,WACrB,OACE,oCACE,yBAAKH,UAAU,6BACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,kBACb,kBAACI,EAAA,EAAD,CAAkBC,MAAM,mBAG1B,6BACA,kBAAC,OAAD,CAAMC,GAAG,YACP,0BAAMN,UAAU,0BAAhB,mB,kCC1CV,kCAAO,IAAMO,EAAuB,CAAC,UAAD,8C,kCCApC,0KAWMC,EAXN,UAWuBjB,EAAOC,IAAV,gFAAGD,CAAH,gDA8CPkB,EAAY,WAyCVC,UAlFE,SAACC,GACd,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MADnB,GAETJ,EAAME,KAAKG,KAAKC,aAAaC,OACVP,EAAMQ,aAAhCC,EAHgB,EAGhBA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALS,EAGHG,SAGfC,EAAWpC,qBAAWgC,EAAc,GACpCK,EAAWrC,qBAAWgC,EAAc,GAEpCM,EAAUd,EAAMe,KAAI,SAACC,GAAD,OACxB,kBAAC,IAAD,CAAaA,KAAMA,EAAKC,KAAMC,IAAKF,EAAKC,KAAKE,QAG/C,OACE,kBAAC,IAAD,CACAC,YACE,kBAAC,IAAD,OAGI,kBAAC,IAAD,CAAK3B,MAAM,OAAO4B,SAAU1B,MAExB,yBAAKP,UAAU,kBACV0B,EACD,kBAAClB,EAAD,CAAgBR,UAAU,qBACpBqB,GACE,kBAAC,OAAD,CAAMf,GAAIkB,EAAUU,IAAI,OAAOpC,MAAO,CAAEqC,eAAgB,SACpD,0BAAMnC,UAAU,aAAhB,qBAGNsB,GACE,kBAAC,OAAD,CAAMhB,GAAImB,EAAUS,IAAI,OAAOpC,MAAO,CAAEqC,eAAgB,SACpD,0BAAMnC,UAAU,kBAAhB,qB,kCC9ChC,2GAUMoC,EAAmB7C,IAAOC,IAAV,mFAAGD,CAAH,qGAahB8C,EAAa9C,IAAOC,IAAV,6EAAGD,CAAH,qBAIV+C,EAAW/C,IAAOC,IAAV,2EAAGD,CAAH,oBAIP,SAASgD,EAAT,GAAiD,IAA1BX,EAA0B,EAA1BA,KACtBY,EAAOZ,EAAKa,YAAYD,KACxBE,EAASxD,qBAAW0C,EAAKe,OAAOxD,MAEtC,OACE,kBAACiD,EAAD,CAAkBN,IAAKF,EAAKG,GAAI/B,UAAU,kBACxC,kBAAC,OAAD,CAAMM,GAAIoC,EAAQ1C,UAAU,aAC1B,wBAAIA,UAAU,SAAS4B,EAAKa,YAAYpC,QAE1C,kBAACiC,EAAD,KACE,2BAAOtC,UAAU,qBACf,wCAAc4B,EAAKa,YAAYG,QAGnC,kBAACP,EAAD,KAAaT,EAAKiB,SAClB,kBAAC,OAAD,CAAMvC,GAAIoC,EAAQ1C,UAAU,gBAC1B,2BAAOA,UAAU,uBAAjB,oBAGF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAcwC,KAAMA","file":"component---src-templates-post-list-tsx-6a78dd79cc8a758b8357.js","sourcesContent":["function getPostUrl (slug) {\n  return `/blog${slug}`;\n}\n\nfunction getPageUrl(index) {\n  return index === 1 ? '/blog' : `/blog-${index}`;\n}\n\nmodule.exports = {\n  getPostUrl,\n  getPageUrl,\n}\n","import React from \"react\"\n\nimport negue from \"../../images/negue.png\"\nimport styled from \"styled-components\"\n\nconst BioHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  // width: 170px;\n  // padding: 1rem;\n  // margin: 1rem;\n  margin: 0 auto 0 0;\n\n  .author-bio {\n    // margin-left: 1rem;\n    margin-bottom: 0;\n  }\n  .custom-switch {\n    margin-left: 1rem;\n    display: inline-block;\n  }\n`;\n\nconst FirstRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  \n  align-self: center;\n`;\n\nconst BioMain = styled.div`\n  margin: 0.5rem 1rem 0.5rem 0.5rem;\n`;\n\nexport const Bio = () => {\n  return (\n    <BioHolder>\n      <FirstRow>\n        <BioMain>\n          <img\n            src={negue}\n            style={{ maxWidth: `150px` }}\n            className=\"profile-img\"\n            alt=\"\"\n          />\n        </BioMain>\n      </FirstRow>\n    </BioHolder>\n  );\n};\n","import styled from \"styled-components\"\nimport React from \"react\"\nimport {Link} from \"gatsby\"\nimport {Bio} from \"./Bio\"\n\nimport \"./sidebar.css\"\n\nimport {TechTagsOverview} from \"../tags/TechTagsOverview\"\nimport {setThemeVars} from \"../shared/styles-global\"\n\nconst PageLinks = styled.div`\n  display: flex; \n  flex-direction: column;\n  margin-bottom: 1rem;\n\n  a {\n    height: 2rem;\n    width: 100%;\n    padding: 8px;\n    padding-left: 0;\n    white-space: nowrap;\n\n    :hover {\n      text-decoration: underline;\n      text-decoration-color: ${() => setThemeVars(\"black\", \"white\")};\n      // background: ${() => setThemeVars(\"#032f62\", \"#63fa83\")}\n    }\n  }\n`;\n\nexport const Sidebar = () => {\n  return (\n    <>\n      <div className=\"sidebar-main border-right\">\n        <Bio />\n\n        <div className=\"tech-tags mt-4\">\n          <TechTagsOverview title=\"Tags-Overview\"\n          />\n        </div>\n        <br/>\n        <Link to=\"/archive\">\n          <span className=\"text-dark d-block py-1\">All posts</span>\n        </Link>\n      </div>\n    </>\n  );\n};\n","export const DEFAULT_SEO_KEYWORDS = [\n  `angular`,\n  `javascript`,\n  `typescript`,\n  `web development`,\n]; // Amazing\n","import {graphql, Link} from \"gatsby\"\nimport React from \"react\"\nimport {Layout} from \"../components/Layout\"\nimport {SEO} from \"../components/seo\"\nimport {Sidebar} from \"../components/sidebar/Sidebar\"\nimport \"../pages/index.css\"\nimport {PostPreview} from \"../components/posts/PostPreview\"\nimport {getPageUrl} from \"../utils/url-utils\"\nimport {DEFAULT_SEO_KEYWORDS} from \"../constants\"\nimport styled from \"styled-components\"\n\nconst PageNavToolbar = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n`;\n\nconst PostList = (props) => {\n    const posts = props.data.allMarkdownRemark.edges\n    const labels = props.data.site.siteMetadata.labels\n    const { currentPage, numPages } = props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = getPageUrl(currentPage - 1);\n    const nextPage = getPageUrl(currentPage + 1);\n\n    const postsEl = posts.map((post) => (\n      <PostPreview post={post.node} key={post.node.id}/>\n    ));\n \n    return (\n      <Layout\n      leftSidebar={\n        <Sidebar />\n      }\n    >\n            <SEO title=\"Home\" keywords={DEFAULT_SEO_KEYWORDS} />\n      \n                <div className=\"post-list-main\">\n                    {postsEl}\n                    <PageNavToolbar className=\"text-center mt-4\">\n                        {!isFirst && (\n                            <Link to={prevPage} rel=\"prev\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark\">← Previous Page</span>\n                            </Link>\n                        )}\n                        {!isLast && (\n                            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark ml-5\">Next Page →</span>\n                            </Link>\n                        )}\n                    </PageNavToolbar>\n                </div>\n         \n        </Layout>\n    )\n}\n\nexport const listQuery = graphql`\n         query paginateQuery($skip: Int!, $limit: Int!) {\n           site {\n             siteMetadata {\n               title \n               author\n               labels {\n                 tag\n                 tech \n                 svg \n                 size \n                 color\n               } \n             }\n           }\n           allMarkdownRemark(\n             limit: $limit\n             skip: $skip\n             sort: { fields: [frontmatter___date], order: DESC }\n             filter: { frontmatter: { published: { eq: true } } }\n           ) {\n             totalCount\n             edges {\n               node {\n                 excerpt(pruneLength: 200)\n                 html\n                 id\n                 frontmatter {\n                   title\n                   date(formatString: \"MMMM DD, YYYY\")\n                   tags\n                 }\n                 fields {\n                   slug\n                 }\n               }\n             }\n           }\n         }\n       `\n\nexport default PostList\n","import {MarkdownRemark} from \"../../graphql\"\nimport {getPostUrl} from \"../../utils/url-utils\"\nimport {Link} from \"gatsby\"\nimport React from \"react\"\nimport {TechTagsList} from \"../tags/TechTagsList\"\nimport styled from \"styled-components\"\n\nexport interface PostPreviewProps {\n  post: MarkdownRemark;\n}\n\nconst OuterPostPreview = styled.div`\n  margin-bottom: 1rem;\n\n  .tech-tags {\n    margin-top: 0.5rem;\n    margin-bottom: 2.5rem;\n  }\n\n  h2 {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst PostExcerp = styled.div`\n  display: inline;\n`;\n\nconst TextInfo = styled.div`\n  display: block;\n`;\n\nexport function PostPreview({ post }: PostPreviewProps) {\n  const tags = post.frontmatter.tags;\n  const toLink = getPostUrl(post.fields.slug);\n\n  return (\n    <OuterPostPreview key={post.id} className=\"container mt-5\">\n      <Link to={toLink} className=\"text-dark\">\n        <h2 className=\"title\">{post.frontmatter.title}</h2>\n      </Link>\n      <TextInfo>\n        <small className=\"d-block text-info\">\n          <i>Posted on {post.frontmatter.date}</i>\n        </small>\n      </TextInfo>\n      <PostExcerp>{post.excerpt}</PostExcerp>\n      <Link to={toLink} className=\"text-primary\">\n        <small className=\"d-inline-block ml-3\"> Read full post</small>\n      </Link>\n\n      <div className=\"tech-tags\">\n        <TechTagsList tags={tags} />\n      </div>\n    </OuterPostPreview>\n  );\n}\n"],"sourceRoot":""}
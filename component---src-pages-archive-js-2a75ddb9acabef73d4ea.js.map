{"version":3,"sources":["webpack:///./src/utils/url-utils.js","webpack:///./src/components/sidebar/Bio.tsx","webpack:///./src/components/sidebar/Sidebar.tsx","webpack:///./src/pages/archive.js","webpack:///./src/components/posts/PostPreview.tsx"],"names":["module","exports","getPostUrl","slug","getPageUrl","index","BioHolder","styled","div","FirstRow","BioMain","Bio","src","negue","style","maxWidth","className","alt","Sidebar","setThemeVars","TechTagsOverview","title","to","pageQuery","ArchivePage","postsEl","data","allMarkdownRemark","edges","map","post","node","leftSidebar","keywords","OuterPostPreview","PostExcerp","TextInfo","PostPreview","tags","frontmatter","toLink","fields","key","id","date","excerpt"],"mappings":"0HAQAA,EAAOC,QAAU,CACfC,WATF,SAAqBC,GACnB,MAAM,QAASA,GASfC,WANF,SAAoBC,GAClB,OAAiB,IAAVA,EAAc,QAAd,SAAiCA,K,4ICApCC,EAAYC,IAAOC,IAAV,qEAAGD,CAAH,8IAkBTE,EAAWF,IAAOC,IAAV,oEAAGD,CAAH,+DAQRG,EAAUH,IAAOC,IAAV,mEAAGD,CAAH,uCAIAI,EAAM,WACjB,OACE,kBAACL,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,yBACEE,IAAKC,IACLC,MAAO,CAAEC,SAAU,SACnBC,UAAU,cACVC,IAAI,S,oCCdHC,GApBKX,IAAOC,IAAV,uEAAGD,CAAH,gMAcgB,kBAAMY,YAAa,QAAS,YAMpC,WACrB,OACE,oCACE,yBAAKH,UAAU,6BACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,kBACb,kBAACI,EAAA,EAAD,CAAkBC,MAAM,mBAG1B,6BACA,kBAAC,OAAD,CAAMC,GAAG,YACP,0BAAMN,UAAU,0BAAhB,mB,kCCzCV,sIAqCaO,EAAS,aAwCPC,UAtEK,SAAC,GAAc,IAG3BC,EAH0B,EAAXC,KACFC,kBAAkBC,MAEfC,KAAI,SAACC,GAAD,OACxB,kBAAC,IAAD,CAAaA,KAAMA,EAAKC,UAG1B,OACE,kBAAC,IAAD,CAAQC,YAAa,kBAAC,IAAD,MAAaX,MAAM,WACtC,kBAAC,IAAD,CACEA,MAAM,UACNY,SAAU,CAAC,SAAD,2DAUZ,yBAAKjB,UAAU,kBACb,wBAAIA,UAAU,gBAAd,aAECS,M,kCC/BT,2GAUMS,EAAmB3B,IAAOC,IAAV,mFAAGD,CAAH,qGAahB4B,EAAa5B,IAAOC,IAAV,6EAAGD,CAAH,qBAIV6B,EAAW7B,IAAOC,IAAV,2EAAGD,CAAH,oBAIP,SAAS8B,EAAT,GAAiD,IAA1BP,EAA0B,EAA1BA,KACtBQ,EAAOR,EAAKS,YAAYD,KACxBE,EAAStC,qBAAW4B,EAAKW,OAAOtC,MAEtC,OACE,kBAAC+B,EAAD,CAAkBQ,IAAKZ,EAAKa,GAAI3B,UAAU,kBACxC,kBAAC,OAAD,CAAMM,GAAIkB,EAAQxB,UAAU,aAC1B,wBAAIA,UAAU,SAASc,EAAKS,YAAYlB,QAE1C,kBAACe,EAAD,KACE,2BAAOpB,UAAU,qBACf,wCAAcc,EAAKS,YAAYK,QAGnC,kBAACT,EAAD,KAAaL,EAAKe,SAClB,kBAAC,OAAD,CAAMvB,GAAIkB,EAAQxB,UAAU,gBAC1B,2BAAOA,UAAU,uBAAjB,oBAGF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAcsB,KAAMA","file":"component---src-pages-archive-js-2a75ddb9acabef73d4ea.js","sourcesContent":["function getPostUrl (slug) {\n  return `/blog${slug}`;\n}\n\nfunction getPageUrl(index) {\n  return index === 1 ? '/blog' : `/blog-${index}`;\n}\n\nmodule.exports = {\n  getPostUrl,\n  getPageUrl,\n}\n","import React from \"react\"\n\nimport negue from \"../../images/negue.png\"\nimport styled from \"styled-components\"\n\nconst BioHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  // width: 170px;\n  // padding: 1rem;\n  // margin: 1rem;\n  margin: 0 auto 0 0;\n\n  .author-bio {\n    // margin-left: 1rem;\n    margin-bottom: 0;\n  }\n  .custom-switch {\n    margin-left: 1rem;\n    display: inline-block;\n  }\n`;\n\nconst FirstRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  \n  align-self: center;\n`;\n\nconst BioMain = styled.div`\n  margin: 0.5rem 1rem 0.5rem 0.5rem;\n`;\n\nexport const Bio = () => {\n  return (\n    <BioHolder>\n      <FirstRow>\n        <BioMain>\n          <img\n            src={negue}\n            style={{ maxWidth: `150px` }}\n            className=\"profile-img\"\n            alt=\"\"\n          />\n        </BioMain>\n      </FirstRow>\n    </BioHolder>\n  );\n};\n","import styled from \"styled-components\"\nimport React from \"react\"\nimport {Link} from \"gatsby\"\nimport {Bio} from \"./Bio\"\n\nimport \"./sidebar.css\"\n\nimport {TechTagsOverview} from \"../tags/TechTagsOverview\"\nimport {setThemeVars} from \"../shared/styles-global\"\n\nconst PageLinks = styled.div`\n  display: flex; \n  flex-direction: column;\n  margin-bottom: 1rem;\n\n  a {\n    height: 2rem;\n    width: 100%;\n    padding: 8px;\n    padding-left: 0;\n    white-space: nowrap;\n\n    :hover {\n      text-decoration: underline;\n      text-decoration-color: ${() => setThemeVars(\"black\", \"white\")};\n      // background: ${() => setThemeVars(\"#032f62\", \"#63fa83\")}\n    }\n  }\n`;\n\nexport const Sidebar = () => {\n  return (\n    <>\n      <div className=\"sidebar-main border-right\">\n        <Bio />\n\n        <div className=\"tech-tags mt-4\">\n          <TechTagsOverview title=\"Tags-Overview\"\n          />\n        </div>\n        <br/>\n        <Link to=\"/archive\">\n          <span className=\"text-dark d-block py-1\">All posts</span>\n        </Link>\n      </div>\n    </>\n  );\n};\n","import {graphql} from \"gatsby\"\nimport React from \"react\"\nimport {Layout} from \"../components/Layout\"\nimport {SEO} from \"../components/seo\"\nimport {Sidebar} from \"../components/sidebar/Sidebar\"\nimport \"./index.css\"\nimport {PostPreview} from \"../components/posts/PostPreview\"\n\nconst ArchivePage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n\n  const postsEl = posts.map((post) => (\n    <PostPreview post={post.node}/>\n  ));\n\n  return (\n    <Layout leftSidebar={<Sidebar />} title=\"Archive\">\n      <SEO\n        title=\"Archive\"\n        keywords={[\n          `gatsby`,\n          `javascript`,\n          `react`,\n          `web development`,\n          `blog`,\n          `graphql`,\n        ]}\n      />\n\n      <div className=\"post-list-main\">\n        <h2 className=\"heading mt-3\">All Posts</h2>\n\n        {postsEl}\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ArchiveQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        labels {\n          tag\n          tech\n          svg\n          size\n          color\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          html\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ArchivePage;\n","import {MarkdownRemark} from \"../../graphql\"\nimport {getPostUrl} from \"../../utils/url-utils\"\nimport {Link} from \"gatsby\"\nimport React from \"react\"\nimport {TechTagsList} from \"../tags/TechTagsList\"\nimport styled from \"styled-components\"\n\nexport interface PostPreviewProps {\n  post: MarkdownRemark;\n}\n\nconst OuterPostPreview = styled.div`\n  margin-bottom: 1rem;\n\n  .tech-tags {\n    margin-top: 0.5rem;\n    margin-bottom: 2.5rem;\n  }\n\n  h2 {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst PostExcerp = styled.div`\n  display: inline;\n`;\n\nconst TextInfo = styled.div`\n  display: block;\n`;\n\nexport function PostPreview({ post }: PostPreviewProps) {\n  const tags = post.frontmatter.tags;\n  const toLink = getPostUrl(post.fields.slug);\n\n  return (\n    <OuterPostPreview key={post.id} className=\"container mt-5\">\n      <Link to={toLink} className=\"text-dark\">\n        <h2 className=\"title\">{post.frontmatter.title}</h2>\n      </Link>\n      <TextInfo>\n        <small className=\"d-block text-info\">\n          <i>Posted on {post.frontmatter.date}</i>\n        </small>\n      </TextInfo>\n      <PostExcerp>{post.excerpt}</PostExcerp>\n      <Link to={toLink} className=\"text-primary\">\n        <small className=\"d-inline-block ml-3\"> Read full post</small>\n      </Link>\n\n      <div className=\"tech-tags\">\n        <TechTagsList tags={tags} />\n      </div>\n    </OuterPostPreview>\n  );\n}\n"],"sourceRoot":""}